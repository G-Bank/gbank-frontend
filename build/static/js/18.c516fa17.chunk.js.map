{"version":3,"sources":["ui-component/cards/MainCard.js","ui-component/extended/AnimateButton.js","views/pages/account/AccountWrapper.js","views/pages/account/AccountCardWrapper.js","views/pages/account/create/RestAccount.js","views/pages/account/create/index.js"],"names":["MainCard","_ref","title","titleButton","bgcolor","children","_jsxs","Box","my","width","display","alignItems","gap","_jsx","Typography","variant","mt","p","borderRadius","defaultProps","AnimateButton","React","forwardRef","ref","offset1","offset2","type","direction","offset","scale","_useCycle","useCycle","_useCycle2","_slicedToArray","x","cycleX","_useCycle3","_useCycle4","y","cycleY","motion","div","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","AccountWrapper","styled","backgroundColor","theme","palette","secondary","light","minHeight","useStyles","makeStyles","_card","card","maxWidth","flexGrow","flexBasis","_defineProperty","breakpoints","down","margin","content","padding","spacing","AccountCardWrapper","other","_objectWithoutProperties","_excluded","classes","_objectSpread","className","contentClass","RestAccount","props","others","Object","assign","_objectDestructuringEmpty","dispatcher","useDispatch","account","useSelector","state","history","useHistory","useEffect","setTypesOfAccount","name","id","disable","_React$useState","useState","_React$useState2","typesOfAccount","Fragment","Formik","initialValues","submit","onSubmit","values","_ref2","setErrors","setStatus","setSubmitting","axios","post","configData","API_SERVER","headers","Authorization","concat","token","then","response","status","ACCOUNT_INITIALIZE","payload","hasAccount","push","success","error","catch","err","console","_ref3","errors","handleSubmit","handleBlur","handleChange","isSubmitting","touched","noValidate","FormControl","RadioGroup","defaultValue","map","item","FormControlLabel","value","control","Radio","label","strings","disabled","sx","FormHelperText","Button","disableElevation","fullWidth","size","color","CreateAccountPage","useTheme","matchDownSM","useMediaQuery","Grid","container","xs","justifyContent","m","sm","mb","Stack","main","gutterBottom","accountWelcome","fontSize","textAlign","accountMessage"],"mappings":"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","file":"static/js/18.c516fa17.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nimport { Box, Typography } from '@mui/material';\r\n\r\nconst MainCard = ({ title, titleButton, bgcolor, children }) => {\r\n  return (\r\n    <Box my={2} width=\"100%\">\r\n      <Box display='flex' alignItems='center' gap={1}>\r\n        <Typography variant=\"h4\">{title}</Typography>\r\n        {titleButton}\r\n      </Box>\r\n      {children && (\r\n        <Box mt={1} p={2} borderRadius={4} width=\"100%\" bgcolor={bgcolor}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nMainCard.propTypes = {\r\n  title: PropTypes.string,\r\n  titleButton: PropTypes.node,\r\n  bgcolor: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nMainCard.defaultProps = {\r\n  bgcolor: 'white',\r\n};\r\n\r\nexport default MainCard;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// third-party\r\nimport { motion, useCycle } from 'framer-motion';\r\n\r\nconst AnimateButton = React.forwardRef(({ children, type, direction, offset, scale }, ref) => {\r\n  let offset1;\r\n  let offset2;\r\n  switch (direction) {\r\n    case 'up':\r\n    case 'left':\r\n      offset1 = offset;\r\n      offset2 = 0;\r\n      break;\r\n    case 'right':\r\n    case 'dow':\r\n    default:\r\n      offset1 = 0;\r\n      offset2 = offset;\r\n      break;\r\n  }\r\n\r\n  const [x, cycleX] = useCycle(offset1, offset2);\r\n  const [y, cycleY] = useCycle(offset1, offset2);\r\n\r\n  switch (type) {\r\n    case 'rotate':\r\n      return (\r\n        <motion.div\r\n          ref={ref}\r\n          animate={{ rotate: 360 }}\r\n          transition={{\r\n            repeat: Infinity,\r\n            repeatType: 'loop',\r\n            duration: 2,\r\n            repeatDelay: 0\r\n          }}\r\n        >\r\n          {children}\r\n        </motion.div>\r\n      );\r\n    case 'slide':\r\n      if (direction === 'up' || direction === 'down') {\r\n        return (\r\n          <motion.div ref={ref} animate={{ y: y }} onHoverEnd={() => cycleY()} onHoverStart={() => cycleY()}>\r\n            {children}\r\n          </motion.div>\r\n        );\r\n      } else {\r\n        return (\r\n          <motion.div ref={ref} animate={{ x: x }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\r\n            {children}\r\n          </motion.div>\r\n        );\r\n      }\r\n    case 'scale':\r\n    default:\r\n      if (typeof scale === 'number') {\r\n        scale = {\r\n          hover: scale,\r\n          tap: scale\r\n        };\r\n      }\r\n      return (\r\n        <motion.div ref={ref} whileHover={{ scale: scale.hover }} whileTap={{ scale: scale.tap }}>\r\n          {children}\r\n        </motion.div>\r\n      );\r\n  }\r\n});\r\n\r\nAnimateButton.propTypes = {\r\n  children: PropTypes.node,\r\n  offset: PropTypes.number,\r\n  type: PropTypes.oneOf(['slide', 'scale', 'rotate']),\r\n  direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\r\n  scale: PropTypes.oneOfType([PropTypes.number, PropTypes.object])\r\n};\r\n\r\nAnimateButton.defaultProps = {\r\n  type: 'scale',\r\n  offset: 10,\r\n  direction: 'right',\r\n  scale: {\r\n    hover: 1,\r\n    tap: 0.9\r\n  }\r\n};\r\n\r\nexport default AnimateButton;\r\n","import { styled } from '@mui/styles';\r\n\r\nconst AccountWrapper = styled('div')(({ theme }) => ({\r\n  backgroundColor: theme.palette.secondary.light,\r\n  minHeight: '100vh'\r\n}));\r\n\r\nexport default AccountWrapper;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@mui/styles';\r\n\r\n// project import\r\nimport MainCard from '../../../ui-component/cards/MainCard';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    maxWidth: '475px',\r\n    '& > *': {\r\n      flexGrow: 1,\r\n      flexBasis: '50%'\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      margin: '20px'\r\n    },\r\n    [theme.breakpoints.down('lg')]: {\r\n      maxWidth: '400px'\r\n    }\r\n  },\r\n  content: {\r\n    padding: theme.spacing(5) + ' !important',\r\n    [theme.breakpoints.down('lg')]: {\r\n      padding: theme.spacing(3) + ' !important'\r\n    }\r\n  }\r\n}));\r\n\r\nconst AccountCardWrapper = ({ children, ...other }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <MainCard className={classes.card} contentClass={classes.content} {...other}>\r\n      {children}\r\n    </MainCard>\r\n  );\r\n};\r\n\r\nAccountCardWrapper.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default AccountCardWrapper;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport configData from '../../../../config';\r\n\r\n// material-ui\r\nimport { Box, Button, FormControl, FormControlLabel, FormHelperText, Radio, RadioGroup } from '@mui/material';\r\n\r\n// third party\r\nimport { Formik } from 'formik';\r\nimport axios from 'axios';\r\n\r\n// project imports\r\nimport AnimateButton from '../../../../ui-component/extended/AnimateButton';\r\nimport { ACCOUNT_INITIALIZE } from './../../../../store/actions';\r\nimport { strings } from '../../../../localizedString';\r\n\r\nconst RestAccount = (props, { ...others }) => {\r\n  const dispatcher = useDispatch();\r\n  const account = useSelector((state) => state.account);\r\n\r\n  const history = useHistory();\r\n\r\n  function getTypesOfAccount() {\r\n    setTypesOfAccount([\r\n      { name: 'profitAccount', id: '1', disable: true },\r\n      { name: 'investmentAccount', id: '1', disable: true },\r\n      { name: 'moneyAccount', id: 'default', disable: false }\r\n    ]);\r\n  }\r\n\r\n  useEffect(getTypesOfAccount, []);\r\n\r\n  const [typesOfAccount, setTypesOfAccount] = React.useState([]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Formik\r\n        initialValues={{\r\n          type: 'default',\r\n          submit: null\r\n        }}\r\n        onSubmit={(values, { setErrors, setStatus, setSubmitting }) => {\r\n          try {\r\n            axios\r\n              .post(\r\n                configData.API_SERVER + 'account/create/',\r\n                {\r\n                  type: values.type\r\n                },\r\n                { headers: { Authorization: `Token ${account.token}` } }\r\n              )\r\n              .then(function (response) {\r\n                if (response.status === 200) {\r\n                  dispatcher({\r\n                    type: ACCOUNT_INITIALIZE,\r\n                    payload: { ...account, hasAccount: true }\r\n                  });\r\n                  history.push('/');\r\n                } else {\r\n                  setStatus({ success: false });\r\n                  setErrors({ submit: response.error });\r\n                  setSubmitting(false);\r\n                }\r\n              })\r\n              .catch(function (error) {\r\n                setStatus({ success: false });\r\n                setErrors({ submit: error.error });\r\n                setSubmitting(false);\r\n              });\r\n          } catch (err) {\r\n            console.error(err);\r\n          }\r\n        }}\r\n      >\r\n        {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n          <form noValidate onSubmit={handleSubmit} {...others}>\r\n            <FormControl>\r\n              <RadioGroup defaultValue={values.type} aria-labelledby=\"account-customized-radios\" name=\"account-radios\">\r\n                {typesOfAccount.map((item) => (\r\n                  <FormControlLabel\r\n                    key={item.name}\r\n                    value={item.id}\r\n                    control={<Radio />}\r\n                    label={strings[item.name]}\r\n                    disabled={item.disable}\r\n                  />\r\n                ))}\r\n              </RadioGroup>\r\n            </FormControl>\r\n\r\n            {errors.submit && (\r\n              <Box\r\n                sx={{\r\n                  mt: 3\r\n                }}\r\n              >\r\n                <FormHelperText error>{errors.submit}</FormHelperText>\r\n              </Box>\r\n            )}\r\n\r\n            <Box\r\n              sx={{\r\n                mt: 2\r\n              }}\r\n            >\r\n              <AnimateButton>\r\n                <Button disableElevation disabled={isSubmitting} fullWidth size=\"large\" type=\"submit\" variant=\"contained\" color=\"secondary\">\r\n                  {strings?.submit}\r\n                </Button>\r\n              </AnimateButton>\r\n            </Box>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default RestAccount;\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { Grid, Stack, Typography, useMediaQuery } from '@mui/material';\r\nimport { useTheme } from '@mui/styles';\r\n\r\n// project imports\r\nimport AccountWrapper from '../AccountWrapper';\r\nimport AccountCardWrapper from '../AccountCardWrapper';\r\nimport { strings } from '../../../../localizedString';\r\nimport RestAccount from './RestAccount';\r\n\r\n\r\n// todo\r\n// select the account type\r\nconst CreateAccountPage = () => {\r\n  const theme = useTheme();\r\n  const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  return (\r\n    <AccountWrapper>\r\n      <Grid container direction=\"column\" sx={{ minHeight: '100vh' }}>\r\n        <Grid item xs={12}>\r\n          <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n            <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n              <AccountCardWrapper>\r\n                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                  <Grid item sx={{ mb: 3 }}></Grid>\r\n                  <Grid item xs={12}>\r\n                    <Grid container direction={matchDownSM ? 'column-reverse' : 'row'} alignItems=\"center\" justifyContent=\"center\">\r\n                      <Grid item>\r\n                        <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                          <Typography color={theme.palette.secondary.main} gutterBottom variant={matchDownSM ? 'h3' : 'h2'}>\r\n                            {strings?.accountWelcome}\r\n                          </Typography>\r\n                          <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : ''}>\r\n                            {strings?.accountMessage}\r\n                          </Typography>\r\n                        </Stack>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <RestAccount />\r\n                  </Grid>\r\n                </Grid>\r\n              </AccountCardWrapper>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </AccountWrapper>\r\n  );\r\n};\r\n\r\nexport default CreateAccountPage;\r\n"],"sourceRoot":""}